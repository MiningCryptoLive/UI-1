@using System
@using System.Globalization
@using System.Linq
@using System.Net
@using Microsoft.AspNetCore.Http.Extensions
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Routing
@using Microsoft.Extensions.Hosting
@using Newtonsoft.Json
@using WebApp.Models
@using WebApp.Resources
@using WebApp.Utils
@using Microsoft.Extensions.Options
@using WebApp
@using WebApp.Extensions

@inject IOptions<AppConfig> appConfig

@{
    var ambientData = (AmbientData)ViewData["Ambient"];

    var titlePartial = ambientData.PageTitle;
    var hasFullTitle = !string.IsNullOrEmpty(ambientData.PageTitleFull);

    if (!hasFullTitle && string.IsNullOrEmpty(titlePartial))
    {
        if (Context.GetRouteData().Values.TryGetValue("action", out var controllerAction))
            titlePartial = (string) controllerAction;
        else if (Context.GetRouteData().Values.TryGetValue("action", out var page))
            titlePartial = (string) page;
    }

    var pageTitle = hasFullTitle ? ambientData.PageTitleFull :
        (titlePartial != null ? titlePartial + " - " : string.Empty) + Strings.OpenGraphAppName;

    var requestCulture = (string) Context.GetRouteData().Values["culture"] ?? "en";

    var cookieTheme = Context.Request.Cookies[AppConstants.ThemeCookieName];
    if (cookieTheme != "light" && cookieTheme != "dark")
        cookieTheme = null;

    var relativeUrl = Url.RouteUrl(Context.GetRouteData().Values);
    var absoluteUrl = Url.AbsoluteContent(relativeUrl);
}

<!DOCTYPE html>
<html lang="@CultureInfo.CurrentCulture.TwoLetterISOLanguageName">
<head>
    @await RenderSectionAsync("headfront", false)

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="content-language" content="@CultureInfo.CurrentCulture.TwoLetterISOLanguageName" />

    <link rel="preconnect" href="https://cdnjs.cloudflare.com" crossorigin>
    <link rel="dns-prefetch" href="https://cdnjs.cloudflare.com">

    <title>@pageTitle</title>

    @if (ambientData.PageMetaKeywords is {Length: > 0 })
    {
        <meta name="keywords" content="@string.Join(", ", ambientData.PageMetaKeywords)" />
    }

    <meta property="og:type" content="website" />
    <meta property="og:title" content="@pageTitle" />
    <meta property="og:url" content="@absoluteUrl" />

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="https://@appConfig.Value.PoolDomain" />
    <meta name="twitter:title" content="@pageTitle" />
    <meta name="twitter:image" content="@Url.AbsoluteContent("/img/logo.png")" />

    @if (!string.IsNullOrEmpty(ambientData.PageDescription))
    {
        <meta name="description" content="@(HttpUtils.Newlines2Spaces(ambientData.PageDescription))" />
        <meta name="og:description" content="@(HttpUtils.Newlines2Spaces(ambientData.PageDescription))" />
        <meta name="twitter:description" content="@(HttpUtils.Newlines2Spaces(ambientData.PageDescription))">
    }

    else
    {
        <meta name="description" content="@(Strings.OpenGraphAppDescription)" />
        <meta name="og:description" content="@(Strings.OpenGraphAppDescription)" />
        <meta name="twitter:description" content="@(Strings.OpenGraphAppDescription)">
    }

    @if (!string.IsNullOrEmpty(appConfig.Value.TwitterUrl))
    {
        <link rel='me' type='text/html' href='@appConfig.Value.TwitterUrl'>
    }

    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css"
          integrity="sha512-5A8nwdMOWrSz20fDsjczgUidUBR8liPYU+WymTZP1lmY9G6Oc7HlZv156XqnsgNUzTyMefFTcsFH/tnJE/+xBg=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />

    @*Self-referencing canonical tag - see https://www.searchviu.com/en/hreflang-canonical/ *@
    <link rel="canonical" href="@absoluteUrl" />

    @foreach (var language in AppConstants.SupportedCultures
      .Select(x => x.TwoLetterISOLanguageName.ToLower()))
    {
        var routeData = language == "en" ?
            Context.GetRouteData().RemoveValue("culture") :
            Context.GetRouteData().SetValue("culture", language);

        <link rel="alternate" hreflang="@language" href="@(Url.AbsoluteContent(Url.RouteUrl(routeData.Values)))" />

        if (language == "en")
        {
            <link rel="alternate" hreflang="x-default" href="@(Url.AbsoluteContent(Url.RouteUrl(routeData.Values)))" />
        }
    }

    @*Generated by https://realfavicongenerator.net/*@
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="theme-color" content="#ffffff">

    <environment names="Production">
        <link rel="stylesheet" href="~/build/head.css" asp-append-version="true" />
    </environment>

    @await RenderSectionAsync("head", false)

    <meta name="mobile-web-app-capable" content="yes">

    <script src="~/build/head.js" asp-append-version="true"></script>
</head>
<body class="@(cookieTheme != null ? cookieTheme + "-mode" : string.Empty)@(ViewData["BodyClass"] != null ? " " + ViewData["BodyClass"] : "")">
    <header>
        <nav class="navbar navbar-expand-md @(ViewData["NavBarClass"] ?? "navbar-light")">
            <a class="navbar-brand" asp-controller="Pool" asp-action="Index"><span>@Strings.OpenGraphAppName</span></a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item active">
                        <a class="nav-link" asp-controller="Pool" asp-action="Index">Home</a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Pool" asp-action="Live">Live</a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link" asp-controller="Pool" asp-action="Faq">FAQ</a>
                    </li>

                    @await RenderSectionAsync("navextra", required: false)

                    <li class="nav-item d-none d-md-block"><span class="nav-link">|</span></li>

                    @if (!string.IsNullOrEmpty(appConfig.Value.TwitterUrl))
                    {
                        <li class="nav-item">
                            <a class="nav-link social hidden-sm-down" title="Twitter" href="@appConfig.Value.TwitterUrl"><i class="fa fa-twitter"></i></a>
                        </li>
                    }

                    <li class="nav-item"><a class="nav-link hidden-sm-down" title="Email" href="@("mailto:" + appConfig.Value.SupportEmail)"><i class="fa fa-envelope-o"></i></a></li>

                    <li class="nav-item"><a id="theme-toggler" class="nav-link" title="@Strings.DarkMode" href="#"><i class="fa @(cookieTheme == "dark" ? "fa-toggle-on" : "fa-toggle-off")"></i></a></li>

                    @if (AppConstants.SupportedCultures.Length > 1)
                    {
                        <li class="nav-item d-none d-md-block"><span class="nav-link">|</span></li>

                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" id="langMenuDropDown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fa fa-globe" aria-hidden="true"></i> @Strings.ResourceManager.GetString("Language_" + requestCulture)
                            </a>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="langMenuDropDown">
                                @foreach (var language in AppConstants.SupportedCultures
                                .Where(x => x.TwoLetterISOLanguageName != CultureInfo.CurrentUICulture.TwoLetterISOLanguageName)
                                .Select(x => x.TwoLetterISOLanguageName.ToLower()))
                                {
                                    var routeData = language == "en" ?
                                    Context.GetRouteData().RemoveValue("culture") :
                                    Context.GetRouteData().SetValue("culture", language);

                                    <a class="dropdown-item" href="@(Url.RouteUrl(routeData.Values))">@(Strings.ResourceManager.GetString("Language_" + language))</a>
                                }
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </nav>
    </header>

    <main>@RenderBody()</main>

    <footer>
        <div class="container">
            <div class="row">
                <div class="col-lg-3">
                    <h6 class="text-uppercase">Contact</h6>

                    <ul class="nav flex-column">
                        @if (!string.IsNullOrEmpty(appConfig.Value.SupportEmail))
                        {
                            <li class="nav-item"><a class="nav-link" href="@("mailto:" + appConfig.Value.SupportEmail)">Email</a></li>
                        }

                        @if (!string.IsNullOrEmpty(appConfig.Value.TwitterUrl))
                        {
                            <li class="nav-item"><a class="nav-link" href="@appConfig.Value.TwitterUrl" target="_blank">Twitter</a></li>
                        }
                    </ul>
                </div>

                @await RenderSectionAsync("FooterExtra", required: false)
            </div>

            <div class="row small-up-1">
                <div class="copyright columns">
                    <p class="powered">Powered by <a target="_blank" href="https://store.miningcore.pro">Miningcore.Pro</a></p>
                    <p><span>Copyright © @(DateTime.UtcNow.Year) @Strings.OpenGraphAppName</span></p>
                </div>
            </div>
        </div>
    </footer>

    <script type="text/javascript">
    window.cookieconsent_options = { "message": "@Strings.CookieWarning", "dismiss": "Got it", "learnMore": "More info", "link": null, "theme": "light-top" };
    </script>

    <script>
    var runtimeEnvironment = {
        isProduction: @HostingEnvironment.IsProduction().ToString().ToLower(),
        lang: '@CultureInfo.CurrentUICulture.TwoLetterISOLanguageName.ToLower()',
        staticBase: '@(HostingEnvironment.IsDevelopment() ? AppConstants.WebPackDevServerBaseUri.AbsoluteUri : "/")',
        @await RenderSectionAsync("RuntimeEnvironment", required: false)
    };
    </script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"
        integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.1/umd/popper.min.js"
        integrity="sha512-ubuT8Z88WxezgSqf3RLuNi5lmjstiJcyezx34yIU2gAHonIi27Na7atqzUZCOoY4CExaoFumzOsFQ2Ch+I/HCw=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.6.0/js/bootstrap.min.js"
        integrity="sha512-XKa9Hemdy1Ui3KSGgJdgMyYlUg1gM+QhL6cnlyTe2qzMCYm4nAZ1PsVerQzTTXzonUR+dmswHqgJPuwCq1MaAg=="
        crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script src="~/build/main.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)

    <environment names="Production">
    @*Put analytics scripts here*@
    </environment>
</body>
</html>
